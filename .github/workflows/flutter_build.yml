name: Flutter Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'

      - name: Get dependencies
        run: flutter pub get

      # ---------------- Regenerate android folder if missing ----------------
      - name: Regenerate android folder if missing
        run: |
          if [ ! -d "android" ]; then
            echo "⚠ android folder missing. Creating..."
            flutter create .
          fi

      # ---------------- Patch Gradle + Kotlin ----------------
      - name: Patch Gradle + Kotlin versions
        run: |
          echo "🔧 Patching Gradle + Kotlin..."
          # Gradle wrapper
          sed -i 's#distributionUrl=.*#distributionUrl=https://services.gradle.org/distributions/gradle-8.2-all.zip#' android/gradle/wrapper/gradle-wrapper.properties || true

          # Kotlin version (old style build.gradle)
          if grep -q "ext.kotlin_version" android/build.gradle; then
            sed -i 's/ext.kotlin_version = .*/ext.kotlin_version = "1.9.25"/' android/build.gradle
          fi

          # Kotlin plugin (new style settings.gradle)
          if grep -q "org.jetbrains.kotlin.android" android/settings.gradle; then
            sed -i 's/id "org.jetbrains.kotlin.android" version "[^"]*"/id "org.jetbrains.kotlin.android" version "1.9.25"/' android/settings.gradle
          fi

          # Android Gradle Plugin
          if grep -q "com.android.tools.build:gradle" android/build.gradle; then
            sed -i 's/classpath "com.android.tools.build:gradle:[^"]*"/classpath "com.android.tools.build:gradle:8.1.2"/' android/build.gradle
          fi

            # ---------------- Regenerate AndroidManifest.xml ----------------
      - name: Regenerate AndroidManifest.xml
        run: |
          echo "📝 Regenerating AndroidManifest.xml..."
          mkdir -p android/app/src/main
          cat > android/app/src/main/AndroidManifest.xml <<EOL
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.onechat">

    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:name="\${applicationName}"
        android:label="OneChat"
        android:icon="@mipmap/ic_launcher"
        android:usesCleartextTraffic="true">

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

        </activity>

        <meta-data
            android:name="io.flutter.embedding.android.NormalTheme"
            android:resource="@style/NormalTheme"
            />
        <meta-data
            android:name="io.flutter.embedding.android.SplashScreenDrawable"
            android:resource="@drawable/launch_background"
            />

    </application>
</manifest>
EOL


      # ---------------- Safe launcher icon generation ----------------
      - name: Apply launcher icon safely
        run: |
          echo "🖼 Preparing res folders for launcher icons..."
          for size in mdpi hdpi xhdpi xxhdpi xxxhdpi; do
            path="android/app/src/main/res/mipmap-$size"
            if [ -d "$path" ]; then
              echo "  - Removing existing directory: $path"
              rm -r "$path"
            fi
            echo "  - Creating directory: $path"
            mkdir -p "$path"
          done

          echo "🚀 Generating launcher icons..."
          flutter pub run flutter_launcher_icons:main

      # ---------------- Build release APK ----------------
      - name: Build release APK
        run: flutter build apk --release

      # ---------------- Upload APK artifact ----------------
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          
